module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
  },
  settings: {
    react: {
      version: 'detect',
    },
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
  env: {
    browser: true,
    amd: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'airbnb',
    'prettier/react',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'plugin:jsx-a11y/recommended',
    'prettier/@typescript-eslint',
    'plugin:prettier/recommended', // Make sure this is always the last element in the array.
  ],
  plugins: ['simple-import-sort', 'react', 'prettier'],
  rules: {
    'prettier/prettier': ['error', {}, { usePrettierrc: true }],
    'react/react-in-jsx-scope': 'off',
    'react/prop-types': 'off',
    'react/jsx-filename-extension': [
      1,
      { extensions: ['.js', '.jsx', '.tsx'] },
    ],
    'react/jsx-props-no-spreading': 'off',
    'react/require-default-props': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    'simple-import-sort/imports': 'error',
    'simple-import-sort/exports': 'error',
    'import/extensions': 'off',
    'jsx-a11y/anchor-is-valid': [
      'error',
      {
        components: ['Link'],
        specialLink: ['hrefLeft', 'hrefRight'],
        aspects: ['invalidHref', 'preferButton'],
      },
    ],
    'keyword-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    '@typescript-eslint/array-type': ['error', { default: 'array-simple' }],
    '@typescript-eslint/adjacent-overload-signatures': ['error'],
    '@typescript-eslint/ban-types': ['error'],
    'brace-style': 'off',
    '@typescript-eslint/brace-style': ['error'],
    'func-call-spacing': 'off',
    '@typescript-eslint/func-call-spacing': ['error', 'never'],
    'no-empty-function': 'off',
    '@typescript-eslint/no-empty-function': ['error'],
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
    quotes: 'off',
    '@typescript-eslint/quotes': ['error', 'single', { avoidEscape: true }],
    semi: 'off',
    '@typescript-eslint/semi': ['error'],
    'space-before-function-paren': 'off',
    '@typescript-eslint/space-before-function-paren': [
      'error',
      {
        anonymous: 'always',
        named: 'never',
        asyncArrow: 'always',
      },
    ],
    'import/order': [
      'error',
      {
        alphabetize: { order: 'asc', caseInsensitive: false },
        groups: [['builtin', 'external'], 'parent', 'sibling', 'index'],
      },
    ],
    'require-atomic-updates': 'off',
    'linebreak-style': ['error', 'unix'],
    'lines-between-class-members': ['error', 'always'],
    'no-lonely-if': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': [
      'error',
      {
        max: 1,
      },
    ],
    'no-debugger': 'off',
    'no-tabs': 'error',
    'no-const-assign': 'error',
    'no-duplicate-imports': 'error',
    'no-restricted-imports': [
      'error',
      {
        patterns: ['src/*'],
      },
    ],
    'arrow-spacing': [
      'warn',
      {
        before: true,
        after: true,
      },
    ],
    'quote-props': ['error', 'as-needed'],
    'no-dupe-args': 'error',
    'no-irregular-whitespace': 'warn',
    'no-var': 'error',
    'no-async-promise-executor': 0,
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-invalid-this': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    // "no-multi-spaces": "warn",
    'no-multi-str': 'warn',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-octal': 'warn',
    'no-redeclare': 'error',
    'no-return-await': 'warn',
    'no-throw-literal': 'warn',
    'no-useless-catch': 0,
    'no-useless-concat': 'error',
    'require-await': 'error',
    yoda: 'error',
    'no-delete-var': 'error',
    'no-shadow-restricted-names': 'error',
    'no-shadow': 'error',
    'capitalized-comments': 'off',
    'comma-dangle': 'warn',
    'no-whitespace-before-property': 'error',
    'block-spacing': 2,
    'space-before-blocks': 2,
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'spaced-comment': ['error', 'always'],
    'semi-spacing': [
      'error',
      {
        before: false,
        after: true,
      },
    ],
    'object-curly-spacing': [
      'error',
      'always',
      {
        arraysInObjects: true,
        objectsInObjects: true,
      },
    ],
    'array-bracket-spacing': [
      'error',
      'never',
      {
        singleValue: false,
        objectsInArrays: false,
        arraysInArrays: false,
      },
    ],
    'no-labels': 'error',
    'no-unused-labels': 'error',
    'eol-last': ['error', 'always'],
    // 'key-spacing': [
    //   'error',
    //   {
    //     beforeColon: false,
    //     afterColon:  true,
    //     mode: 'minimum',
    //     align: 'value',
    //   },
    // ],
  },
};
